@model BistroDriveWebApp.Models.ProfileSettingsViewModel
@{
    ViewBag.Title = "Ваш профиль";
}

<div class="col-md-10 col-md-offset-1 well signin settings-form">
<h2>@ViewBag.Title.</h2>

@Html.ActionLink("Сменить пароль", "Changepassword")
<p class="text-success">@ViewBag.StatusMessage</p>

<div><image src="@Html.DisplayFor(model => model.Avatar_Url)" width="200" height="200" /></div>
@using (Html.BeginForm("UpdateAvatar", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
    <input type="file" name="file" />
    <input type="submit" value="OK" />
        }
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Avatar_Url)
    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", disabled="disabled" } })
        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
    </div>
    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled="disabled" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.Telphone, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Telphone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Telphone, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.City, new SelectList(Model.City_List, "Id_City", "Name"), new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-10 col-md-offset-1">
        @Html.LabelFor(model => model.WithTravel, htmlAttributes: new { @class = "control-label" })
        <div class="checkbox" style="width:31px">
            <input type="checkbox" name="WithTravel" id="WithTravel"
                    @if (Model.WithTravel != null) { @: checked
                                        } />
            <label for="WithTravel"></label>
        </div>
        @Html.ValidationMessageFor(model => model.WithTravel, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-8 col-md-offset-1">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(model => model.Description, new {rows="7", cols="87"} )
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="input-group col-md-8 col-md-offset-1">
        <input type="submit" value="Сохранить" class="btn btn-default" />
    </div>
</div>
}
</div>
