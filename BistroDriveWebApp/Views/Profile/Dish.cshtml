@model BistroDriveWebApp.Models.DishListViewModel
@{
    ViewBag.Title = @Html.DisplayFor(model => model.UserName) + " ("
    + @Html.DisplayFor(model => model.Firstname) + " "
     + @Html.DisplayFor(model => model.Surname) + ")";
}
<h2>@ViewBag.Title
    @if(Model.WithTravel == true)
    {
        @: - выезжаю надом
    }
    </h2>
<p>
@if (User.Identity.Name == Model.UserName)
{
    @Html.ActionLink("Добавить блюдо", "AddDish") @:|
}

    @Html.ActionLink("Вернуться к профилю", "index", new { id = Model.UserName})
</p>
<div>
    @foreach (var item in Model.DishList)
    {
        <div>
            <h4>@Html.ActionLink(item.Name, "dishinfo", new { id = item.Id_Dish })</h4>
                <div>@Html.DisplayFor(modelItem => item.dishtype.Name)</div>
                @if (item.ImageUrl != "" && item.ImageUrl != null)
                {
                    <a href="@Url.Action("dishinfo", new { id = item.Id_Dish })">
                        <img src="@Html.DisplayFor(Model=>item.ImageUrl)" width="200" height="200" />
                    </a>
                }
                <div>Цена:
                    @Html.DisplayFor(modelItem => item.Price)
                </div>
                <div>
                   Цена с ингридиентами:
                    @Html.DisplayFor(modelItem => item.PriceWithIngridient)
                </div>
                <p>@Html.DisplayFor(modelItem => item.Description)</p>
                <p>Ингридиенты: @Html.DisplayFor(modelItem => item.Ingridient)</p>
                @if(item.CanTeach== true)
                {
                    <p>Обучаю</p>
                }
            </div>
            <hr />
    }
</div>
